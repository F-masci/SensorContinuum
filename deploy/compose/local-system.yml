services:

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: timescaledb-compose
    hostname: timescaledb-host
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpass
      POSTGRES_DB: sensorcontinuum
    ports:
      - "5432:5432"
    volumes:
      - ../../configs/postgresql/init-timescale.sql:/docker-entrypoint-initdb.d/init-timescale.sql:ro
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "sensorcontinuum" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - iot-net

  redis:
    image: redis:latest
    container_name: redis-compose
    hostname: redis-storage
    command: ["--bind", "0.0.0.0", "--protected-mode", "no"]
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - iot-net

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper-compose
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: [ "CMD", "zkServer.sh", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - iot-net

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka-compose
    hostname: kafka-broker
    ports:
      - "9094:9094"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://kafka-broker:9094
      # --- CORREZIONE QUI ---
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-broker:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    # --- RIMOSSO depends_on: zookeeper ---
    healthcheck:
      test: [ "CMD-SHELL", "kafka-broker-api-versions.sh --bootstrap-server kafka:9092" ]
      interval: 10s
      timeout: 5s
      retries: 5 # Aumentiamo un po' i tentativi per dare tempo a Kafka di avviarsi
    networks:
      - iot-net
  mosquitto:
    build:
      context: ../..
      dockerfile: deploy/docker/mosquitto-local.Dockerfile
    container_name: mosquitto-compose
    hostname: mosquitto-broker
    ports:
      - "1883:1883"
    networks:
      - iot-net

    healthcheck:
      test: ["CMD-SHELL", "mosquitto_sub -h localhost -t '$$SYS/broker/version' -C 1 -W 2 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  intermediate-fog-hub:
    build:
      context: ../..
      dockerfile: deploy/docker/intermediate-fog-hub.Dockerfile
    container_name: intermediate-fog-hub-compose
    environment:
      - BUILDING_ID=building-0001
      - HUB_ID=intermediate-hub-001
      - KAFKA_BROKER_ADDRESS=kafka-broker
      - KAFKA_BROKER_PORT=9094
      # - EDGE_HUB_TOPIC=raw-data-edge-hub_build-0001
      # - EDGE_HUB_TOPIC_PARTITION=1
      - POSTGRES_HOST=timescaledb-host
    hostname: intermediate-fog-hub
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - iot-net

  proximity-fog-hub:
    build:
      context: ../..
      dockerfile: deploy/docker/proximity-fog-hub.Dockerfile
    container_name: proximity-fog-hub-compose
    environment:
      - BUILDING_ID=building-0001
      - HUB_ID=proximity-hub-001
      - KAFKA_BROKER_ADDRESS=kafka-broker
      - KAFKA_BROKER_PORT=9094
      - MQTT_BROKER_ADDRESS=mosquitto-broker
      - POSTGRES_HOST=timescaledb-host
      - POSTGRES_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=adminpass
      - POSTGRES_DATABASE=sensorcontinuum
    hostname: proximity-fog-hub
    depends_on:
      mosquitto:
        condition: service_healthy
      kafka:
        condition: service_healthy
      timescaledb:
        condition: service_healthy
    networks:
      - iot-net

  edge-hub:
    build:
      context: ../..
      dockerfile: deploy/docker/edge-hub.Dockerfile
    container_name: edge-hub-compose
    environment:
      - BUILDING_ID=building-0001
      - FLOOR_ID=floor-001
      - HUB_ID=hub-001
      - MQTT_BROKER_ADDRESS=mosquitto-broker
      - KAFKA_BROKER_ADDRESS=kafka-broker
      - KAFKA_BROKER_PORT=9094
      - REDIS_ADDRESS=redis-storage
    hostname: edge-hub
    depends_on:
      mosquitto:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - iot-net

  sensor-agent-1:
    build:
      context: ../..
      dockerfile: deploy/docker/sensor-agent.Dockerfile
    container_name: sensor-agent-1-compose
    environment:
      - BUILDING_ID=building-0001
      - FLOOR_ID=floor-001
      - SENSOR_ID=sensor-0001
      - MQTT_BROKER_ADDRESS=mosquitto-broker
    depends_on:
      - edge-hub
    networks:
      - iot-net

  sensor-agent-2:
    build:
      context: ../..
      dockerfile: deploy/docker/sensor-agent.Dockerfile
    container_name: sensor-agent-2-compose
    environment:
      - BUILDING_ID=building-0001
      - FLOOR_ID=floor-001
      - SENSOR_ID=sensor-0002
      - MQTT_BROKER_ADDRESS=mosquitto-broker
    depends_on:
      - edge-hub
    networks:
      - iot-net

networks:
  iot-net:
    driver: bridge