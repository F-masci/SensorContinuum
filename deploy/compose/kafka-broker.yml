services:
  
  zookeeper-01:
    image: bitnami/zookeeper:latest
    container_name: zookeeper-${REGION}-01
    hostname: zookeeper-${REGION}-01
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-bridge

  kafka-01:
    image: bitnami/kafka:latest
    container_name: kafka-${REGION}-01
    hostname: kafka-${REGION}-01
    ports:
      - "${KAFKA_PORT}:9094"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-01:9092,EXTERNAL://${REGION}.kafka-broker.local:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server=kafka-01:9092", "--list" ]
      start_period: 15s
      interval: 10s
    depends_on:
      - zookeeper-01
    networks:
      - kafka-bridge

  kafka-init-topics:
    image: fmasci/sc-kafka-init-topics:latest
    container_name: kafka-init-topics-${REGION}
    hostname: kafka-init-topics-${REGION}
    depends_on:
      kafka-01:
        condition: service_healthy
    networks:
      - kafka-bridge

networks:
  kafka-bridge:
    name: kafka-broker-${REGION}-bridge
    driver: bridge